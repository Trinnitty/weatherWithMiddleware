{"ast":null,"code":"import _objectSpread from \"E:\\\\react\\\\weatherWithMiddleware\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nvar initialState = {\n  isFetching: false,\n  error: \"\",\n  weather: {\n    city: null,\n    lastUpdate: \"\",\n    temprature: \"\",\n    humidity: \"\",\n    visibility: \"\",\n    pressure: \"\",\n    description: \"\",\n    wind: \"\"\n  }\n};\nexport function weatherReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"WEATHER_REQUEST\":\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: \"\",\n        weather: {\n          city: \"\",\n          lastUpdate: \"\",\n          temprature: \"\",\n          humidity: \"\",\n          visibility: \"\",\n          pressure: \"\",\n          description: \"\",\n          wind: \"\"\n        }\n      });\n\n    case \"WEATHER_SUCCESS\":\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: false,\n        weather: action.payload\n      });\n\n    case \"WEATHER_FAIL\":\n      return _objectSpread({}, state, {\n        isFetching: false,\n        error: action.payload.message\n      });\n\n    case \"WEATHER_PREV\":\n      return _objectSpread({}, state, {\n        weather: action.payload,\n        error: false\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["E:\\react\\weatherWithMiddleware\\src\\reducers\\weatherReduser.js"],"names":["initialState","isFetching","error","weather","city","lastUpdate","temprature","humidity","visibility","pressure","description","wind","weatherReducer","state","action","type","payload","message"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,KADO;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,IAAI,EAAE,IADC;AAEPC,IAAAA,UAAU,EAAE,EAFL;AAGPC,IAAAA,UAAU,EAAE,EAHL;AAIPC,IAAAA,QAAQ,EAAE,EAJH;AAKPC,IAAAA,UAAU,EAAE,EALL;AAMPC,IAAAA,QAAQ,EAAE,EANH;AAOPC,IAAAA,WAAW,EAAE,EAPN;AAQPC,IAAAA,IAAI,EAAE;AARC;AAHU,CAArB;AAeA,OAAO,SAASC,cAAT,GAAsD;AAAA,MAA9BC,KAA8B,uEAAtBb,YAAsB;AAAA,MAARc,MAAQ;;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,+BACKF,KADL;AAEEZ,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,KAAK,EAAE,EAHT;AAIEC,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,EADC;AAEPC,UAAAA,UAAU,EAAE,EAFL;AAGPC,UAAAA,UAAU,EAAE,EAHL;AAIPC,UAAAA,QAAQ,EAAE,EAJH;AAKPC,UAAAA,UAAU,EAAE,EALL;AAMPC,UAAAA,QAAQ,EAAE,EANH;AAOPC,UAAAA,WAAW,EAAE,EAPN;AAQPC,UAAAA,IAAI,EAAE;AARC;AAJX;;AAeF,SAAK,iBAAL;AACE,+BAAYE,KAAZ;AAAmBZ,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,KAAK,EAAE,KAA7C;AAAoDC,QAAAA,OAAO,EAAEW,MAAM,CAACE;AAApE;;AACF,SAAK,cAAL;AACE,+BAAYH,KAAZ;AAAmBZ,QAAAA,UAAU,EAAE,KAA/B;AAAsCC,QAAAA,KAAK,EAAEY,MAAM,CAACE,OAAP,CAAeC;AAA5D;;AACF,SAAK,cAAL;AACE,+BAAYJ,KAAZ;AAAmBV,QAAAA,OAAO,EAAEW,MAAM,CAACE,OAAnC;AAA4Cd,QAAAA,KAAK,EAAC;AAAlD;;AACF;AACE,aAAOW,KAAP;AAxBJ;AA0BD","sourcesContent":["const initialState = {\r\n  isFetching: false,\r\n  error: \"\",\r\n  weather: {\r\n    city: null,\r\n    lastUpdate: \"\",\r\n    temprature: \"\",\r\n    humidity: \"\",\r\n    visibility: \"\",\r\n    pressure: \"\",\r\n    description: \"\",\r\n    wind: \"\"\r\n  }\r\n};\r\n\r\nexport function weatherReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case \"WEATHER_REQUEST\":\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: \"\",\r\n        weather: {\r\n          city: \"\",\r\n          lastUpdate: \"\",\r\n          temprature: \"\",\r\n          humidity: \"\",\r\n          visibility: \"\",\r\n          pressure: \"\",\r\n          description: \"\",\r\n          wind: \"\"\r\n        }\r\n      };\r\n    case \"WEATHER_SUCCESS\":\r\n      return { ...state, isFetching: false, error: false, weather: action.payload };\r\n    case \"WEATHER_FAIL\":\r\n      return { ...state, isFetching: false, error: action.payload.message };\r\n    case \"WEATHER_PREV\":\r\n      return { ...state, weather: action.payload, error:false };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}